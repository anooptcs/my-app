node {
   stage('SCM Checkout'){
       git url: 'https://github.com/anooptcs/my-app.git'
   }
   stage('Mvn Package'){
     def mvnHome =  tool name: 'maven-3.5.4', type: 'maven' 
     def mvnCMD = "${mvnHome}/bin/mvn"
     sh "${mvnCMD} clean package test  checkstyle:checkstyle"
   }
      stage('Code Quility Covrage'){
       checkstyle canComputeNew: false, defaultEncoding: '', healthy: '', pattern: '', unHealthy: ''
   }
      stage('SonarQ Code Scan'){
     def mvnHome =  tool name: 'maven-3.5.4', type: 'maven' 
     def mvnCMD = "${mvnHome}/bin/mvn"
     sh "${mvnCMD} clean verify sonar:sonar"
   }
   stage('Build Docker Image'){
     sh 'docker build -t my-app:latest .'
     sh 'docker tag my-app:0.0.2 tcs238-docker-my-app.bintray.io/my-app:0.0.1'
   }
   stage('scan Docker Image'){
       aquaMicroscanner imageName: 'my-app:0.0.2', notCompliesCmd: '', onDisallowed: 'ignore', outputFormat: 'html'
   }
      stage('Push Docker Image'){
     
        sh 'docker login -u <user> -p <API key> tcs238-docker-my-app.bintray.io'
		sh 'docker tag my-app:0.0.2 tcs238-docker-my-app.bintray.io/my-app:latest'
		sh 'docker push tcs238-docker-my-app.bintray.io/my-app:latest'
	}
  }
